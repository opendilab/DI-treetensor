ones
=========

.. currentmodule:: treetensor.numpy

    
Documentation
------------------

.. autofunction:: ones

    
.. admonition:: Numpy Version Related
    :class: tip

    This documentation is based on 
    `numpy.ones <https://numpy.org/doc/1.21/reference/generated/numpy.ones.html>`_ 
    in `numpy v1.21.6 <https://numpy.org/doc/1.21/>`_.
    **Its arguments' arrangements depend on the version of numpy you installed**.
    
    If some arguments listed here are not working properly, please check your numpy's version 
    with the following command and find its documentation.
    
    .. code-block:: shell
        :linenos:
    
        python -c 'import numpy as np;print(np.__version__)'
    
    
    
    The arguments and keyword arguments supported in numpy v1.21.6 is listed below.
    
    

Description From Numpy v1.21
---------------------------------

.. currentmodule:: numpy

    
.. function:: Return a new array of given shape and type, filled with ones.


Parameters
~~~~~~~~~~
    shape \: int or sequence of ints
        Shape of the new array, e.g., ``(2, 3)`` or ``2``.
    dtype \: data-type, optional
        The desired data-type for the array, e.g., `numpy.int8`.  Default is
        `numpy.float64`.
    order \: {'C', 'F'}, optional, default: C
        Whether to store multi-dimensional data in row-major
        (C-style) or column-major (Fortran-style) order in
        memory.
    like \: array_like
        Reference object to allow the creation of arrays which are not
        NumPy arrays. If an array-like passed in as ``like`` supports
        the ``__array_function__`` protocol, the result will be defined
        by it. In this case, it ensures the creation of an array object
        compatible with that passed in via this argument.

        .. versionadded:: 1.20.0

Returns
~~~~~~~
    out \: ndarray
        Array of ones with the given shape, dtype, and order.

See Also
~~~~~~~~
    ones_like \: Return an array of ones with shape and type of input.
    empty \: Return a new uninitialized array.
    zeros \: Return a new array setting values to zero.
    full \: Return a new array of given shape filled with value.


Examples
~~~~~~~~
    >>> np.ones(5)
    array([1., 1., 1., 1., 1.])

    >>> np.ones((5,), dtype=int)
    array([1, 1, 1, 1, 1])

    >>> np.ones((2, 1))
    array([[1.],
           [1.]])

    >>> s = (2,2)
    >>> np.ones(s)
    array([[1.,  1.],
           [1.,  1.]])




